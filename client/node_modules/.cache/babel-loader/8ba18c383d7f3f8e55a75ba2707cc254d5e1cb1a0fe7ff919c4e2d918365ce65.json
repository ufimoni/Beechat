{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maestro_le6\\\\Documents\\\\BeeChatapp\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { getLoggedUser, getAllUsers } from \"../apiCalls/user\";\nimport { getAllchats } from \"../apiCalls/chat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideLoader, showLoader } from \"../redux/loaderSlice\";\nimport { setAllUsers, setUser, setAllChats } from \"../redux/usersSlice\";\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.userReducer);\n  const navigate = useNavigate();\n  const getLoggedInUser = async () => {\n    let response = null;\n    try {\n      dispatch(showLoader());\n      console.log(\"Fetching logged-in user...\");\n      response = await getLoggedUser();\n      console.log(\"Response from getLoggedUser:\", response);\n      dispatch(hideLoader());\n      if (response.success) {\n        dispatch(setUser(response.data));\n      } else {\n        toast.error(response.message);\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(\"Error fetching logged-in user:\", error);\n      toast.error(error.message);\n      navigate('/login');\n    }\n  };\n  const getAllInUsers = async () => {\n    let response = null;\n    try {\n      dispatch(showLoader());\n      console.log(\"Fetching logged-in user...\");\n      response = await getAllUsers();\n      console.log(\"Response from getLoggedUser:\", response);\n      dispatch(hideLoader());\n      if (response.success) {\n        dispatch(setAllUsers(response.data));\n      } else {\n        toast.error(response.message);\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(\"Error fetchng get all users:\", error);\n      toast.error(error.message);\n      navigate('/login');\n    }\n  };\n  const getChatsfromDb = async () => {\n    try {\n      const response = await getAllchats();\n      if (response.success) {\n        dispatch(setAllChats(response.data)); //// where response.data is the payload and data is storing our chats from the backend\n      }\n    } catch (error) {\n      // toast.error(response.message);\n      navigate('/login');\n    }\n  };\n\n  ////only logged in user get access.\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    console.log(\"Token in localStorage:\", token);\n    if (token) {\n      getLoggedInUser();\n      getAllInUsers();\n      getChatsfromDb();\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ProtectedRoute, \"4tIGSqMEcvQ5OgYI48/cku+xkA0=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useState","useNavigate","getLoggedUser","getAllUsers","getAllchats","useDispatch","useSelector","hideLoader","showLoader","setAllUsers","setUser","setAllChats","toast","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","dispatch","user","state","userReducer","navigate","getLoggedInUser","response","console","log","success","data","error","message","getAllInUsers","getChatsfromDb","token","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Maestro_le6/Documents/BeeChatapp/client/src/components/ProtectedRoute.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getLoggedUser, getAllUsers } from \"../apiCalls/user\";\r\nimport { getAllchats } from \"../apiCalls/chat\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideLoader, showLoader } from \"../redux/loaderSlice\";\r\nimport { setAllUsers, setUser, setAllChats } from \"../redux/usersSlice\";\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction ProtectedRoute({ children }) {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(state => state.userReducer);\r\n  const navigate = useNavigate();\r\n\r\n  const getLoggedInUser = async () => {\r\n    let response = null;\r\n    try {\r\n      dispatch(showLoader());\r\n      console.log(\"Fetching logged-in user...\");\r\n      response = await getLoggedUser();\r\n      console.log(\"Response from getLoggedUser:\", response);\r\n      dispatch(hideLoader());\r\n      if (response.success) {\r\n        dispatch(setUser(response.data));\r\n      } else {\r\n        toast.error(response.message);\r\n        navigate('/login');\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetching logged-in user:\", error);\r\n      toast.error(error.message);\r\n      navigate('/login');\r\n    }\r\n  };\r\n  \r\n  const getAllInUsers = async () => {\r\n    let response = null;\r\n    try {\r\n      dispatch(showLoader());\r\n      console.log(\"Fetching logged-in user...\");\r\n      response = await getAllUsers();\r\n      console.log(\"Response from getLoggedUser:\", response);\r\n      dispatch(hideLoader());\r\n      if (response.success) {\r\n        dispatch(setAllUsers(response.data));\r\n      } else {\r\n        toast.error(response.message);\r\n        navigate('/login');\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error fetchng get all users:\", error);\r\n      toast.error(error.message);\r\n      navigate('/login');\r\n    }\r\n  };\r\n \r\n  const getChatsfromDb = async () =>{\r\n    \r\ntry{\r\nconst response = await getAllchats();\r\nif(response.success){\r\n  dispatch(setAllChats(response.data)) //// where response.data is the payload and data is storing our chats from the backend\r\n}\r\n}catch(error){\r\n  // toast.error(response.message);\r\n  navigate('/login');\r\n}\r\n  };\r\n  \r\n\r\n\r\n\r\n\r\n ////only logged in user get access.\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    console.log(\"Token in localStorage:\", token);\r\n    if (token) {\r\n      getLoggedInUser();\r\n      getAllInUsers();\r\n      getChatsfromDb();\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}